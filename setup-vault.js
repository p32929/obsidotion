#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

function createEnvFile(vaultPath) {
  const envContent = `# Obsidian Development Configuration
# Generated by setup script

# Path to your Obsidian vault's plugins directory
OBSIDIAN_VAULT_PATH=${vaultPath}

# Plugin ID (should match manifest.json)
PLUGIN_ID=obsidotion

# Development settings
NODE_ENV=development
`;
  
  fs.writeFileSync('.env', envContent);
  console.log('✅ Created .env file with your vault path');
}

function validatePath(vaultPath) {
  if (!fs.existsSync(vaultPath)) {
    try {
      fs.mkdirSync(vaultPath, { recursive: true });
      console.log(`✅ Created directory: ${vaultPath}`);
    } catch (error) {
      console.log(`❌ Could not create directory: ${error.message}`);
      return false;
    }
  }
  
  return true;
}

console.log('🔧 Obsidotion Vault Setup');
console.log('=========================');
console.log('');
console.log('This will configure your Obsidian vault path for live development.');
console.log('');

rl.question('Enter your Obsidian vault plugins path (e.g., /path/to/vault/.obsidian/plugins): ', (answer) => {
  const vaultPath = answer.trim();
  
  if (!vaultPath) {
    console.log('❌ Path cannot be empty');
    rl.close();
    return;
  }
  
  if (!validatePath(vaultPath)) {
    rl.close();
    return;
  }
  
  try {
    createEnvFile(vaultPath);
    
    console.log('');
    console.log('🎉 Setup complete!');
    console.log('');
    console.log('Available commands:');
    console.log('  yarn dev          - Build and deploy to your vault in watch mode');
    console.log('  yarn build        - Build and deploy to your vault (production)');
    console.log('  yarn deploy       - Deploy current files to vault');
    console.log('');
    console.log('Your plugin will be available at:');
    console.log(`  ${path.join(vaultPath, 'obsidotion')}`);
    console.log('');
    console.log('💡 The vault path is now stored in .env file');
    console.log('💡 You can edit .env to change the path later');
    
  } catch (error) {
    console.log(`❌ Setup failed: ${error.message}`);
  }
  
  rl.close();
}); 